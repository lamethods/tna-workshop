[
  {
    "objectID": "chapters/chapter8-cliques.html",
    "href": "chapters/chapter8-cliques.html",
    "title": "Cliques",
    "section": "",
    "text": "Cliques are subgraphs in which every pair of nodes is directly connected. To find cliques in your network, click on Cliques in the left tab. Then, set the Clique Size (n) to define how many interconnected nodes each clique should contain. You can also adjust the Threshold parameter to include only edges with weights above a specified value. Once your parameters are set, click Find Cliques. A detected clique will appear under Cliques Found. To view other identified cliques, open the dropdown menu labeled Choose Clique and select the one you want to explore.\n\nThe clique visualizations can be customized by adjusting the following Settings:\n\nCut Value: sets the minimum edge value required for the edge to appear solid (rather than opaque) in the graph.\nMinimum Value: sets the lowest edge value that will be displayed in the graph.\nEdge Label Size: adjusts the font size of edge labels.\nNode Size: controls the visual size of each node.\nNode Label Size: modifies the font size of node labels.\nLayout: Choose between two layout options:\n\nCircle: Positions all nodes in a circular formation, or\nSpring: - ?",
    "crumbs": [
      "Cliques"
    ]
  },
  {
    "objectID": "chapters/chapter5-centralities.html",
    "href": "chapters/chapter5-centralities.html",
    "title": "Centrality measures",
    "section": "",
    "text": "Click on Centrality Measures in the left tab to view key network metrics for each code, including closeness, out-strength centrality, and diffusion.\nYou can exclude irrelevant centralities by removing their names from the Centralities box. To add them back, select from the drop-down list of all available centralities.\nTo include loops (edges that return to the same code), check the Loops? option.\nIf you need calculations based on normalized values, check the Normalize? box.\nThe centrality measures table is accompanied by visualizations. You can choose how many columns to use when displaying these visualizations by selecting the correct number in Columns.",
    "crumbs": [
      "Centralities"
    ]
  },
  {
    "objectID": "chapters/chapter2-data.html",
    "href": "chapters/chapter2-data.html",
    "title": "2. Input Data",
    "section": "",
    "text": "To upload your data, click on Input Data in the tab on the left side. The TNA app supports multiple data types for upload, including Sequence Data (see section 2.2), Long Data (see section 2.3), and Transition Matrices (see section 2.4). Additionally, users can explore the app using built-in Sample Data (see section 2.1). You can find your options under Data Input.\nAfter you have uploaded your data, you will have to select the analysis that you want to perform. Here are your options:\nRelative Analysis: TNA analysis based on Markov modeling that calculates probabilities of transitions. For this analysis, you need ordered coding of your data, i.e., the order of codes (actions).\nFrequency Analysis: frequency-based TNA analysis that models frequencies of transitions between codes. Similarly to relative analysis, you need ordered coding of your data, i.e., the order of codes (actions).\nCo-occurence Analysis: co-occurence TNA does not focus on modeling transitions but shows the co-occurrence of codes within one unit of analysis. For this analysis, a binary coding (0-1) of your acions should be sufficient.\nSuccessful analysis will result in a summary document under the data preview that includes\nState Labels: the list of all codes that are included in the analysis\nTransition Probability Matrix: if you selected relative analysis, you will see a matrix showing the transition probabilities between codes.\nTransition Frequency Matrix: if you selected frequency analysis, you will see a matrix showing the transition frequencies between codes.\nCo-occurence Matrix: if you selected co-occurence analysis, you will see a matrix of code co-occurence within one unit.\nInitial Probabilities: this metrics indicates the probability of a code to be the first code in the sequence.",
    "crumbs": [
      "Data"
    ]
  },
  {
    "objectID": "chapters/chapter2-data.html#sample-data",
    "href": "chapters/chapter2-data.html#sample-data",
    "title": "2. Input Data",
    "section": "2.1 Sample Data",
    "text": "2.1 Sample Data\nIf you donâ€™t have your own data, you can select Sample Data. This dataset has 2,000 entries and is formatted as a sequence data.\nCodes: the codes (e.g., monitor, emotion) represent different stages of a problem-solving process.\n1: the column names represent the sequence in which the codes appear.\n2: the rows represent units of analysis in which the codes appear.\nAs it is sample data, there is no information about the context of the data collection. As such, the rows could represent different units of analysis, e.g., an utterance, an activity or a paragraph, depending on the research settings. For instance, in row 5, discuss was the first code detected, followed by emotion and, finally, cohesion.\nYou can choose Analysis Type and click on Analyze.",
    "crumbs": [
      "Data"
    ]
  },
  {
    "objectID": "chapters/chapter2-data.html#sequence-data",
    "href": "chapters/chapter2-data.html#sequence-data",
    "title": "2. Input Data",
    "section": "2.2 Sequence Data",
    "text": "2.2 Sequence Data\nSelecting Sequence Data means that your data is in the sequence or wide format. An example of sequence data can be seen in section 2.1. To upload the data, click on Browse. You can upload data in csv, xlsx and R sequence stslist objects.\nAfter successfully uploading your data, you can choose Analysis Type and click on Analyze.",
    "crumbs": [
      "Data"
    ]
  },
  {
    "objectID": "chapters/chapter2-data.html#long-data",
    "href": "chapters/chapter2-data.html#long-data",
    "title": "2. Input Data",
    "section": "2.3 Long Data",
    "text": "2.3 Long Data\nLong data refers to datasets in which each variable is represented by a single column. After uploading your long-format data, you need to specify the following variables:\nAction: represents your codes and may include different states, actions, or discourse elements.\nActor: denotes the unit of analysis, which could be a student, a group, or a phase within an activity.\nTime: refers to the chronological order of actions, which can be represented using timestamps or uniquely ordered identifiers.\nOrder: indicates the order in which actions take place within one sequence.\nThreshold: - no idea what it is\nDate format: you can specify the date format that you are using in the time variable. - is it correct?\nAfter successfully uploading your data, you can choose Analysis Type, and click on Analyze.",
    "crumbs": [
      "Data"
    ]
  },
  {
    "objectID": "chapters/chapter2-data.html#transition-matrix",
    "href": "chapters/chapter2-data.html#transition-matrix",
    "title": "2. Input Data",
    "section": "2.4 Transition Matrix",
    "text": "2.4 Transition Matrix\nUse LaTeX to write equations:\nAfter successfully uploading your data, you can choose Analysis Type (see section 2.5), and click on Analyze.",
    "crumbs": [
      "Data"
    ]
  },
  {
    "objectID": "chapters/chapter9-comparison.html",
    "href": "chapters/chapter9-comparison.html",
    "title": "Comparison",
    "section": "",
    "text": "To compare networks of different groups or settings, click on Comparison on the left tab.\nDepending on your dataset you can choose different comparison groups by selecting the relevant variable from Choose grouping column. If you have more than two groups, you select them in dropdown menus of Choose group 1 and Choose group 2.\nThe Difference Network will show the difference in edge strength by subtracting the velus from group 2 from group 1. You can also access other metrics regarding group comparison.\nBy clicking on Mosaic, you can see the mosaic plot of code frequency with statistical significance of the differences.\nCentralities show the centralities measures of each code divided by group. Here you can exclude irrelevant centralities by removing their names from the Centralities box. To add them back, select from the drop-down list of all available centralities.\nTo include loops (edges that return to the same code), check the Loops? option.\nIf you need calculations based on normalized values, check the Normalize? box.\nThe centrality measures table is accompanied by visualizations. You can choose how many columns to use when displaying these visualizations by selecting the correct number in Columns.\n\nTo compare two models and determine whether their differences are statistically significant, you can perform a Permutation test by checking the corresponding box. This test works by repeatedly shuffling and comparing the data to generate a distribution of differences under the null hypothesis. You can also adjust the number of Iteratations to control how many permutations are performed, which affects the accuracy of the resulting significance estimate, and set the level - is this the level of statistical significance? of stastical significance that you are interested in. Finally, you can also conduct a Paired test - is this the parametric test? the network did not change much, when I ran it. When you run the permutation and statistical tests, the Mosaic and Centralities tabs are automatically updated to reflect the results. \nYou can also adjust the following Settings in your permutation network:\n\nCut Value: sets the minimum edge value required for the edge to appear solid (rather than opaque) in the graph.\nMinimum Value: sets the lowest edge value that will be displayed in the graph.\nEdge Label Size: adjusts the font size of edge labels.\nNode Size: controls the visual size of each node.\nNode Label Size: modifies the font size of node labels.\nLayout: Choose between two layout options:\n\nCircle: Positions all nodes in a circular formation, or\nSpring: - ?",
    "crumbs": [
      "Comparison"
    ]
  },
  {
    "objectID": "chapters/chapter1-intro.html",
    "href": "chapters/chapter1-intro.html",
    "title": "Intro",
    "section": "",
    "text": "This tutorial demonstrates the functionalities of the Transition Network Analysis (TNA) Shiny app developed by Sonsoles LÃ³pez-Pernas: https://sonsoleslp.shinyapps.io/tna-app/.\nThis tutorial uses Sample Data, provided within the TNA app, to showcase the app (see section 2.1).",
    "crumbs": [
      "Intro"
    ]
  },
  {
    "objectID": "chapters/chapter10-validation.html",
    "href": "chapters/chapter10-validation.html",
    "title": "Validation",
    "section": "",
    "text": "To validate edge weight accuracy and overall model stability, you can perform bootstrapping by selecting Validation from the left-hand tab. Bootstrapping involves repeatedly resampling the original data with replacement to generate new datasets, where some data points may appear multiple times while others may be excluded. You can adjust the number of Iterations, select level - is this the level of statistical significance?, and choose between two bootstrapping methods: stability or threshold. Additionally, you can define the Consistency range, which sets the lower and upper bounds of the bootstrap confidence intervals for transitions. Once all parameters are set, click Bootstrap. In the resulting network visualization, stable connections will appear in blue, while removed or unstable connections will be shown in red.\n\nYou can also adjust the following Settings in your bootstrapped model:\n\nCut Value: sets the minimum edge value required for the edge to appear solid (rather than opaque) in the graph.\nMinimum Value: sets the lowest edge value that will be displayed in the graph.\nEdge Label Size: adjusts the font size of edge labels.\nNode Size: controls the visual size of each node.\nNode Label Size: modifies the font size of node labels.\nLayout: Choose between two layout options:\n\nCircle: Positions all nodes in a circular formation, or\nSpring: - ?",
    "crumbs": [
      "Validation"
    ]
  },
  {
    "objectID": "chapters/chapter4-vis.html",
    "href": "chapters/chapter4-vis.html",
    "title": "Visualization",
    "section": "",
    "text": "You can find your network visualization under Visualization on the left tab.\n\nTo explore your network, you can adjust the following Settings:\n\nCut Value: sets the minimum edge value required for the edge to appear solid (rather than opaque) in the graph.\nMinimum Value: sets the lowest edge value that will be displayed in the graph.\nEdge Label Size: adjusts the font size of edge labels.\nNode Size: controls the visual size of each node.\nNode Label Size: modifies the font size of node labels.\nLayout: Choose between two layout options:\n\nCircle: Positions all nodes in a circular formation, or\nSpring: - how is it determined? based on values and centrality?",
    "crumbs": [
      "Visualization"
    ]
  },
  {
    "objectID": "chapters/chapter6-communities.html",
    "href": "chapters/chapter6-communities.html",
    "title": "Community Detection",
    "section": "",
    "text": "Communities are groups of nodes that are more densely interconnected with each other than with the rest of the network. To explore the communities in your model, click on Community detection on the left tab.\nYou can choose from several algorithms to identify communities within your network. If applicable, you may also set the gamma level to adjust the resolution of detection. Available algorithms:\nwalktrap: detects communities using short random walks.\nfast_greedy: uses modularity optimization to find community structure.\nlabel_prop: applies label propagation to assign nodes to communities.\ninfomap: identifies communities based on information flow.\nedge_betweenness: uses edge betweenness centrality to split the network into communities.\nleading_eigen: detects communities using the leading eigenvector of the modularity matrix.\nspinglass: based on the spinglass model from statistical physics.\nThe number in brackets next to each algorithm indicates the number of communities it detected. In the visualization, communities are represented using distinct node colors.\n Finally, you can adjust the following Settings of your network:\n\nCut Value: sets the minimum edge value required for the edge to appear solid (rather than opaque) in the graph.\nMinimum Value: sets the lowest edge value that will be displayed in the graph.\nEdge Label Size: adjusts the font size of edge labels.\nNode Size: controls the visual size of each node.\nNode Label Size: modifies the font size of node labels.\nLayout: Choose between two layout options:\n\nCircle: Positions all nodes in a circular formation, or\nSpring: - ?",
    "crumbs": [
      "Communities"
    ]
  },
  {
    "objectID": "chapters/chapter3-summary.html",
    "href": "chapters/chapter3-summary.html",
    "title": "3. Summary results",
    "section": "",
    "text": "By selecting Summary results in the left tab, you will access three tables:\n\nSummary Statistics: that shows your overall network metrics, such as node count, mean distance, or reciprocity. The values will vary depending on the analysis that you have selected.\nInitial Probabilities: this metrics indicates the probability of a code to be the first code in the sequence.\nTransition Matrix: Depending on the analysis that you are performing, one of the following matrices will be displayed:\n\nIf you selected relative analysis, you will see a Transition Probability Matrix, showing the transition probabilities between codes.\nIf you selected frequency analysis, you will see a Transition Frequency Matrix showing the transition frequencies between codes.\nIf you selected co-occurence analysis, you will see a Co-occurence Matrix of code co-occurence within one unit.",
    "crumbs": [
      "Summary"
    ]
  },
  {
    "objectID": "chapters/chapter1-intro.html#transition-network-analysis-tna-app",
    "href": "chapters/chapter1-intro.html#transition-network-analysis-tna-app",
    "title": "Intro",
    "section": "",
    "text": "This tutorial demonstrates the functionalities of the Transition Network Analysis (TNA) Shiny app developed by Sonsoles LÃ³pez-Pernas: https://sonsoleslp.shinyapps.io/tna-app/.\nThis tutorial uses Sample Data, provided within the TNA app, to showcase the app (see section 2.1).",
    "crumbs": [
      "Intro"
    ]
  }
]